%h2<Forcer Settings

- queries = IssueQuery.find( :all,
                    :select =>"queries.name, projects.name AS project_name, queries.id",
                    :joins => "JOIN projects ON projects.id = queries.project_id",
                    :conditions => ['visibility IN ( ?)', [Query::VISIBILITY_PUBLIC, Query::VISIBILITY_ROLES] )
%table
  %tbody
    - counter = 0
    - settings['queries'].values.each do |data|
      %tr
        %th<= select_tag( "settings[queries][#{counter}][query_id]",
                          options_for_select( data['query_id'].to_i, queries.map{ |x| ["#{x.project_name}>#{x.name}", x.id] } ) )
        %th
          = text_field_tag( "settings[queries][#{counter}][max_issues]", data['max_issues'], :maxlength => 5 )
      - counter+=1
    - if counter.zero?
      %tr
        %th<= select_tag( "settings[queries][#{counter}][query_id]",
                          options_for_select( nil, [["", nil]] +queries.map{ |x| ["#{x.project_name}>#{x.name}", x.id] } ) )
        %th
          = text_field_tag( "settings[queries][#{counter}][max_issues]", '', :maxlength => 5 )

:javascript
  var QUERIES = #{queries.to_json};
